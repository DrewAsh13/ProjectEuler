# -*- coding: utf-8 -*-
"""
Created on Tue Jun 13 15:59:00 2023

@author: drewa
"""

"""Question: Each new term in the Fibonacci sequence is generated by adding 
the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ....    

By considering the terms in the Fibonacci sequence whose values do not exceed\
four million, find the sum of the even-valued terms."""

"First step: We must generate a list of the fibonacci numbers."

Fib = [1,2]

for _ in range(10):
    Fib.append((Fib[-2] + Fib[-1]))
    Fib

def fib_function(x: int, y:int, length: int )-> int:
    Fib_list =[x, y]
    for _ in range(length):
        Fib_list.append((Fib_list[-2] + Fib_list[-1]))
        Fib_list
    return Fib_list


fib_function(1, 2, 10)

#"find the first instance a Fibonacci number is greater than or equal to n"


def fib_greater_than_equal_n(x: list, n: int)-> list:
    index = []
    for i in range(0, len(x)-1):
        if x[i]>= n:
            index.append(i)
            index
    return index

def fib_less_than_equal_n(x: list, n:int)-> list:
    index = []
    for i in range(0, len(x)-1):
        if x[i]<= n:
            index.append(i)
    return index
# Test to make sure the funciton is working

fib_greater_than_equal_n(fib_function(1, 2, 10), 21) 

#Find index less than or equal to 4 000 000.

fib_greater_than_equal_n(fib_function(1, 2, 100), 4000000)

len(fib_function(1, 2, 30))

# Find the sum of the even Fibonnaci numbers less than 4,000,000.
sum_even_fib_less_than_4mil = sum([i for i in fib_function(1, 2, 30) if i % 2 == 0])
sum_even_fib_less_than_4mil
#def fib_greater_than_n(x: list, n: int) -> list:
 #   """input is a list of numbers with a given positive integer
 #      and the return is an ordered list of indicies which the list is greater
  #     than or equal to n."""
  # index = []
  # for i in range(0,len(list)-1):
   #    if x[i] >= n:
   #        index.append(i)
   #return index




            
           